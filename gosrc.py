"""Copy Go sources generated by Bazel into the tree.

This makes tools like IDEs work much better, since they can compile the Go code
without Bazel.
"""
import os
import pathlib
import shutil
import subprocess
import sys

TARGETS = [
    '//proto/compiler:compiler_go_proto',
]

def parse_target(target):
    i = target.find(':')
    if i == -1:
        name = None
        package = target
    else:
        name = target[i+1:]
        package = target[:i]
    assert package.startswith('//')
    package = package[2:]
    assert not package.startswith('/')
    if name is None:
        i = target.rindex('/')
        name = target[i+1:]
    return package, name

def main(argv):
    os.chdir(pathlib.Path(__file__).parent)
    cmd = ['bazel', 'build']
    for target in TARGETS:
        cmd.append(target)
    print('Building Go protobuf libraries', file=sys.stderr)
    subprocess.run(
        cmd,
        check=True,
    )
    suffix = '_go_proto'
    for target in TARGETS:
        package, name = parse_target(target)
        assert name.endswith(suffix)
        src_name = name[:len(name)-len(suffix)] + '.pb.go'
        src = pathlib.Path(
            'bazel-bin',
            package,
            name + '_',
            'moria.us',
            'js13k',
            package,
            # name,
            src_name,
        )
        dest = pathlib.Path(
            package,
            # name,
            src_name,
        )
        dest.parent.mkdir(exist_ok=True)
        shutil.copyfile(src, dest)

if __name__ == '__main__':
    main(sys.argv[1:])
