"""Generate the entitylist.go file.

The input is a list of entities, in JSON format. It is available from:
https://html.spec.whatwg.org/entities.json
"""
import io
import json
import os
import subprocess
import sys

def die(*msg):
    print('Error:', *msg, file=sys.stderr)
    raise SystemExit(1)

def main(argv):
    if len(argv) == 0:
        die('Usage: entities.py <entities.json>')
    elif len(argv) == 1:
        epath = argv[0]
    else:
        die('Unexpected argument:', repr(argv[1]))

    rootpath = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
    outpath = os.path.join(rootpath, "build", "html", "entitylist.go")

    with open(epath) as fp:
        entities = json.load(fp)
    print('Entity definitions:', len(entities), file=sys.stderr)

    emap = {}
    for name, info in entities.items():
        if not name.endswith(';'):
            continue
        codepoints = info['codepoints']
        if len(codepoints) != 1:
            continue
        codepoint = codepoints[0]
        numeric = '&#{:d};'.format(codepoint)
        if len(name) <= len(numeric):
            pname = emap.get(codepoint)
            if pname is None or len(name) < len(pname):
                if codepoint < 128:
                    name = name.lower()
                emap[codepoint] = name[1:-1]
    print('Shorter entities:', len(emap), file=sys.stderr)

    elist = sorted(emap.items())
    fp = io.StringIO()
    fp.write('package html\n')
    fp.write('// This file is automatically generated by entities.py\n\n')
    fp.write('var entities = map[rune]string{\n')
    for codepoint, name in elist:
        fp.write('    {}: "{}",\n'.format(codepoint, name))
    fp.write('}\n')

    proc = subprocess.run(
        ['gofmt'],
        stdout=subprocess.PIPE,
        check=True,
        input=fp.getvalue().encode('ASCII'),
    )

    print('Writing:', outpath, file=sys.stderr)
    with open(outpath, 'w') as fp:
        fp.write(proc.stdout.decode('ASCII'))

if __name__ == '__main__':
    main(sys.argv[1:])
